{
    "algorithms": [
        {
        "name": "Depth-First Search",
        "type": "Traversal",
        "author": "Charles Pierre Trémaux",
        "year_introduced": "19th century",
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V)",
        "strategy_used": "Exhaustive Search",
        "data_structures_used": ["Stack", "Adjacency List", "Adjacency Matrix"]
        },
        {
        "name": "Breadth-First Search",
        "type": "Traversal",
        "author": "E. W. Dijkstra",
        "year_introduced": 1959,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V)",
        "strategy_used": "Exhaustive Search",
        "data_structures_used": ["Queue", "Adjacency List", "Adjacency Matrix"]
        },
        {
        "name": "Dijkstra's Algorithm",
        "type": "Shortest Path Finding",
        "author": "E. W. Dijkstra",
        "year_introduced": 1956,
        "pseudocode": "NA",
        "time_complexity": "O((V + E) log V)",
        "space_complexity": "O(V + E)",
        "strategy_used": "Greedy",
        "data_structures_used": ["Priority Queue", "Adjacency List", "Adjacency Matrix"]
        },
        {
        "name": "Bellman-Ford Algorithm",
        "type": "Shortest Path Finding",
        "author": "Richard Bellman, Lester Ford",
        "year_introduced": 1958,
        "pseudocode": "NA",
        "time_complexity": "O(VE)",
        "space_complexity": "O(V)",
        "strategy_used": "Dynamic Programming",
        "data_structures_used": ["Array", "Adjacency List", "Adjacency Matrix"]
        },
        {
        "name": "Floyd-Warshall Algorithm",
        "type": "Shortest Path Finding",
        "author": "Stephen Warshall",
        "year_introduced": 1962,
        "pseudocode": "NA",
        "time_complexity": "O(V^3)",
        "space_complexity": "O(V^2)",
        "strategy_used": "Dynamic Programming",
        "data_structures_used": ["Matrix"]
        },
        {
        "name": "Prim's Algorithm",
        "type": "Minimum Spanning Tree",
        "author": "Jarník (rediscovered by Prim)",
        "year_introduced": "1930",
        "pseudocode": "NA",
        "time_complexity": "O(E log V)",
        "space_complexity": "O(V + E)",
        "strategy_used": "Greedy",
        "data_structures_used": ["Priority Queue", "Adjacency List"]
        },
        {
        "name": "Kruskal's Algorithm",
        "type": "Minimum Spanning Tree",
        "author": "Joseph Kruskal",
        "year_introduced": 1956,
        "pseudocode": "NA",
        "time_complexity": "O(E log E)",
        "space_complexity": "O(E + V)",
        "strategy_used": "Greedy",
        "data_structures_used": ["Disjoint Set Union", "Priority Queue"]
        },
        {
        "name": "Topological Sorting (Kahn's Algorithm)",
        "type": "Ordering",
        "author": "Arthur B. Kahn",
        "year_introduced": 1962,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V)",
        "strategy_used": "Greedy",
        "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
        "name": "Tarjan's Strongly Connected Components Algorithm",
        "type": "Connectivity",
        "author": "Robert Tarjan",
        "year_introduced": 1972,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V)",
        "strategy_used": "DFS-based",
        "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
        "name": "Kosaraju's Strongly Connected Components Algorithm",
        "type": "Connectivity",
        "author": "S. Rao Kosaraju",
        "year_introduced": 1978,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V)",
        "strategy_used": "DFS-based",
        "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
        "name": "Edmonds-Karp Algorithm",
        "type": "Maximum Flow",
        "author": "Jack Edmonds, Richard Karp",
        "year_introduced": 1972,
        "pseudocode": "NA",
        "time_complexity": "O(VE^2)",
        "space_complexity": "O(VE)",
        "strategy_used": "Breadth-First Search",
        "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
        "name": "Ford-Fulkerson Algorithm",
        "type": "Maximum Flow",
        "author": "Lester R. Ford, Delbert Fulkerson",
        "year_introduced": 1956,
        "pseudocode": "NA",
        "time_complexity": "O(E * max_flow)",
        "space_complexity": "O(VE)",
        "strategy_used": "Augmenting Path",
        "data_structures_used": ["DFS", "Adjacency List"]
        },
        {
        "name": "Hopcroft-Karp Algorithm",
        "type": "Maximum Bipartite Matching",
        "author": "John E. Hopcroft, Richard M. Karp",
        "year_introduced": 1973,
        "pseudocode": "NA",
        "time_complexity": "O(√V E)",
        "space_complexity": "O(V + E)",
        "strategy_used": "BFS and DFS",
        "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
        "name": "Hungarian Algorithm",
        "type": "Assignment Problem",
        "author": "Harold Kuhn (based on Hungarian mathematicians)",
        "year_introduced": 1955,
        "pseudocode": "NA",
        "time_complexity": "O(V^3)",
        "space_complexity": "O(V^2)",
        "strategy_used": "Dynamic Programming",
        "data_structures_used": ["Matrix"]
        },
        {
        "name": "Johnson's Algorithm",
        "type": "All-Pairs Shortest Path",
        "author": "Donald B. Johnson",
        "year_introduced": 1977,
        "pseudocode": "NA",
        "time_complexity": "O(V^2 log V + VE)",
        "space_complexity": "O(V^2)",
        "strategy_used": "Bellman-Ford + Dijkstra",
        "data_structures_used": ["Priority Queue", "Adjacency List"]
        },
        {
            "name": "Karp's Minimum Mean Cycle Algorithm",
            "type": "Cycle Detection",
            "author": "Richard M. Karp",
            "year_introduced": 1978,
            "pseudocode": "NA",
            "time_complexity": "O(VE)",
            "space_complexity": "O(VE)",
            "strategy_used": "Dynamic Programming",
            "data_structures_used": ["Matrix", "Adjacency List"]
        },
        {
            "name": "Hopcroft-Karp Algorithm",
            "type": "Maximum Matching",
            "author": "John E. Hopcroft, Richard M. Karp",
            "year_introduced": 1973,
            "pseudocode": "NA",
            "time_complexity": "O(√V E)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Bipartite Graph, Augmenting Path",
            "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
            "name": "Edmonds' Blossom Algorithm",
            "type": "Maximum Matching",
            "author": "Jack Edmonds",
            "year_introduced": 1965,
            "pseudocode": "NA",
            "time_complexity": "O(V^3)",
            "space_complexity": "O(V^2)",
            "strategy_used": "Greedy, Augmenting Path",
            "data_structures_used": ["Graph Representation", "Queue"]
        },
        {
            "name": "Push-Relabel Algorithm",
            "type": "Maximum Flow",
            "author": "Andrew V. Goldberg, Robert E. Tarjan",
            "year_introduced": 1988,
            "pseudocode": "NA",
            "time_complexity": "O(V^2√E)",
            "space_complexity": "O(VE)",
            "strategy_used": "Greedy",
            "data_structures_used": ["Adjacency List", "Priority Queue"]
        },
        {
            "name": "Floyd-Warshall Algorithm",
            "type": "All-Pairs Shortest Path",
            "author": "Robert Floyd, Stephen Warshall",
            "year_introduced": 1962,
            "pseudocode": "NA",
            "time_complexity": "O(V^3)",
            "space_complexity": "O(V^2)",
            "strategy_used": "Dynamic Programming",
            "data_structures_used": ["Matrix"]
        },
        {
            "name": "Johnson's Algorithm",
            "type": "All-Pairs Shortest Path",
            "author": "Donald B. Johnson",
            "year_introduced": 1977,
            "pseudocode": "NA",
            "time_complexity": "O(V^2 log V + VE)",
            "space_complexity": "O(V^2)",
            "strategy_used": "Bellman-Ford, Dijkstra",
            "data_structures_used": ["Priority Queue", "Adjacency List"]
        },
        {
            "name": "Gabow's Edmonds' Algorithm",
            "type": "Minimum Spanning Arborescence",
            "author": "Harold N. Gabow",
            "year_introduced": 1986,
            "pseudocode": "NA",
            "time_complexity": "O(VE log V)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Greedy",
            "data_structures_used": ["Adjacency List", "Priority Queue"]
        },
        {
            "name": "Klein's Algorithm",
            "type": "Shortest Path (Planar Graphs)",
            "author": "Philip N. Klein",
            "year_introduced": 2005,
            "pseudocode": "NA",
            "time_complexity": "O(V log V)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Dynamic Programming",
            "data_structures_used": ["Heap", "Adjacency List"]
        },
        {
            "name": "Tarjan's Bridge-Finding Algorithm",
            "type": "Bridge Finding",
            "author": "Robert Tarjan",
            "year_introduced": 1974,
            "pseudocode": "NA",
            "time_complexity": "O(V + E)",
            "space_complexity": "O(V)",
            "strategy_used": "DFS",
            "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
            "name": "Tarjan's Cut Vertex Algorithm",
            "type": "Articulation Points Finding",
            "author": "Robert Tarjan",
            "year_introduced": 1972,
            "pseudocode": "NA",
            "time_complexity": "O(V + E)",
            "space_complexity": "O(V)",
            "strategy_used": "DFS",
            "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
            "name": "Graph Coloring using Backtracking",
            "type": "Graph Coloring",
            "author": "NA",
            "year_introduced": "NA",
            "pseudocode": "NA",
            "time_complexity": "O(K^V)",
            "space_complexity": "O(V)",
            "strategy_used": "Backtracking",
            "data_structures_used": ["Adjacency List", "Stack"]
        },

        {
            "name": "Welsh-Powell Algorithm",
            "type": "Graph Coloring",
            "author": "D.J. Welsh, M.B. Powell",
            "year_introduced": 1967,
            "pseudocode": "NA",
            "time_complexity": "O(V^2)",
            "space_complexity": "O(V)",
            "strategy_used": "Greedy",
            "data_structures_used": ["Adjacency List", "Sorting"]
        },
        {
            "name": "Brooks' Theorem Algorithm",
            "type": "Graph Coloring",
            "author": "R. L. Brooks",
            "year_introduced": 1941,
            "pseudocode": "NA",
            "time_complexity": "O(V + E)",
            "space_complexity": "O(V)",
            "strategy_used": "Greedy",
            "data_structures_used": ["Adjacency List"]
        },
        {
            "name": "Kuhn's Algorithm",
            "type": "Maximum Bipartite Matching",
            "author": "Harold W. Kuhn",
            "year_introduced": 1955,
            "pseudocode": "NA",
            "time_complexity": "O(VE)",
            "space_complexity": "O(V + E)",
            "strategy_used": "DFS-based Augmenting Path",
            "data_structures_used": ["Adjacency List", "DFS Stack"]
        },
        {
            "name": "Borůvka’s Algorithm",
            "type": "Minimum Spanning Tree",
            "author": "Otakar Borůvka",
            "year_introduced": 1926,
            "pseudocode": "NA",
            "time_complexity": "O(E log V)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Greedy",
            "data_structures_used": ["Disjoint Set", "Graph Representation"]
        },
        {
            "name": "Stoer-Wagner Algorithm",
            "type": "Minimum Cut",
            "author": "Mechthild Stoer, Frank Wagner",
            "year_introduced": 1997,
            "pseudocode": "NA",
            "time_complexity": "O(V^3)",
            "space_complexity": "O(V^2)",
            "strategy_used": "Greedy",
            "data_structures_used": ["Adjacency Matrix", "Priority Queue"]
        },
        {
            "name": "Gomory-Hu Tree Algorithm",
            "type": "All-Pairs Minimum Cut",
            "author": "Ralph E. Gomory, T. C. Hu",
            "year_introduced": 1961,
            "pseudocode": "NA",
            "time_complexity": "O(V F)",
            "space_complexity": "O(V^2)",
            "strategy_used": "Max-Flow based",
            "data_structures_used": ["Adjacency List", "Flow Network"]
        },
        {
            "name": "Edmonds-Karp Algorithm",
            "type": "Maximum Flow",
            "author": "Jack Edmonds, Richard M. Karp",
            "year_introduced": 1972,
            "pseudocode": "NA",
            "time_complexity": "O(VE^2)",
            "space_complexity": "O(VE)",
            "strategy_used": "Breadth-First Search (BFS)",
            "data_structures_used": ["Adjacency List", "Queue"]
        },
        {
            "name": "Successive Shortest Path Algorithm",
            "type": "Minimum Cost Flow",
            "author": "NA",
            "year_introduced": "NA",
            "pseudocode": "NA",
            "time_complexity": "O(VE^2)",
            "space_complexity": "O(VE)",
            "strategy_used": "Greedy, Shortest Path",
            "data_structures_used": ["Priority Queue", "Graph Representation"]
        },
        {
            "name": "Cycle Detection using DFS",
            "type": "Cycle Detection",
            "author": "NA",
            "year_introduced": "NA",
            "pseudocode": "NA",
            "time_complexity": "O(V + E)",
            "space_complexity": "O(V)",
            "strategy_used": "Depth-First Search (DFS)",
            "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
            "name": "Cycle Detection using Union-Find",
            "type": "Cycle Detection",
            "author": "NA",
            "year_introduced": "NA",
            "pseudocode": "NA",
            "time_complexity": "O(E log* V)",
            "space_complexity": "O(V)",
            "strategy_used": "Union-Find",
            "data_structures_used": ["Disjoint Set Union"]
        },
        {
            "name": "Bellman-Ford Algorithm",
            "type": "Shortest Path Finding",
            "author": "Richard Bellman, Lester Ford",
            "year_introduced": 1958,
            "pseudocode": "NA",
            "time_complexity": "O(VE)",
            "space_complexity": "O(V)",
            "strategy_used": "Dynamic Programming",
            "data_structures_used": ["Adjacency List", "Array"]
        },
        {
        "name": "Floyd-Warshall Algorithm",
        "type": "All-Pairs Shortest Path",
        "author": "Robert Floyd, Stephen Warshall",
        "year_introduced": 1962,
        "pseudocode": "NA",
        "time_complexity": "O(V^3)",
        "space_complexity": "O(V^2)",
        "strategy_used": "Dynamic Programming",
        "data_structures_used": ["Adjacency Matrix"]
        },
        {
        "name": "Johnson’s Algorithm",
        "type": "All-Pairs Shortest Path",
        "author": "Donald B. Johnson",
        "year_introduced": 1977,
        "pseudocode": "NA",
        "time_complexity": "O(V^2 log V + VE)",
        "space_complexity": "O(V^2)",
        "strategy_used": "Bellman-Ford, Dijkstra",
        "data_structures_used": ["Adjacency List", "Priority Queue"]
        },
        {
        "name": "Gabow’s Algorithm",
        "type": "Strongly Connected Components",
        "author": "Harold N. Gabow",
        "year_introduced": 2000,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V + E)",
        "strategy_used": "DFS-based",
        "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
        "name": "Karger's Algorithm",
        "type": "Minimum Cut",
        "author": "David Karger",
        "year_introduced": 1993,
        "pseudocode": "NA",
        "time_complexity": "O(V^2 log V)",
        "space_complexity": "O(V + E)",
        "strategy_used": "Randomized Contraction",
        "data_structures_used": ["Adjacency List", "Disjoint Set"]
        },
        {
        "name": "Hopcroft-Karp Algorithm",
        "type": "Maximum Bipartite Matching",
        "author": "John Hopcroft, Richard Karp",
        "year_introduced": 1973,
        "pseudocode": "NA",
        "time_complexity": "O(√V E)",
        "space_complexity": "O(V + E)",
        "strategy_used": "DFS-based Augmenting Path",
        "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
        "name": "Tarjan’s Offline LCA Algorithm",
        "type": "Lowest Common Ancestor",
        "author": "Robert Tarjan",
        "year_introduced": 1979,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V + E)",
        "strategy_used": "DFS, Union-Find",
        "data_structures_used": ["Disjoint Set Union", "Stack"]
        },
        {
        "name": "Eulerian Path Algorithm",
        "type": "Eulerian Path & Circuit",
        "author": "Leonhard Euler",
        "year_introduced": 1736,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V + E)",
        "strategy_used": "Hierholzer’s Algorithm",
        "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
        "name": "Hierholzer’s Algorithm",
        "type": "Eulerian Path & Circuit",
        "author": "Carl Hierholzer",
        "year_introduced": 1873,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V + E)",
        "strategy_used": "DFS-based",
        "data_structures_used": ["Stack", "Adjacency List"]
        },
        {
        "name": "Fleury’s Algorithm",
        "type": "Eulerian Path & Circuit",
        "author": "Paul Fleury",
        "year_introduced": 1883,
        "pseudocode": "NA",
        "time_complexity": "O(V + E)",
        "space_complexity": "O(V + E)",
        "strategy_used": "Edge Removal",
        "data_structures_used": ["Adjacency List"]
        },

        {
            "name": "Stoer-Wagner Algorithm",
            "type": "Global Minimum Cut",
            "author": "Mechthild Stoer, Frank Wagner",
            "year_introduced": 1997,
            "pseudocode": "NA",
            "time_complexity": "O(VE + V^2 log V)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Greedy, Priority Queue",
            "data_structures_used": ["Priority Queue", "Adjacency List"]
        },
        {
            "name": "Kuhn’s Algorithm",
            "type": "Maximum Bipartite Matching",
            "author": "Harold W. Kuhn",
            "year_introduced": 1955,
            "pseudocode": "NA",
            "time_complexity": "O(VE)",
            "space_complexity": "O(V + E)",
            "strategy_used": "DFS-based Augmenting Path",
            "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
            "name": "Dinic’s Algorithm",
            "type": "Maximum Flow",
            "author": "Efim Dinic",
            "year_introduced": 1970,
            "pseudocode": "NA",
            "time_complexity": "O(V^2 E)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Blocking Flow, BFS, DFS",
            "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
            "name": "Edmonds-Karp Algorithm",
            "type": "Maximum Flow",
            "author": "Jack Edmonds, Richard Karp",
            "year_introduced": 1972,
            "pseudocode": "NA",
            "time_complexity": "O(VE^2)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Ford-Fulkerson, BFS",
            "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
            "name": "Push-Relabel Algorithm",
            "type": "Maximum Flow",
            "author": "Andrew Goldberg, Robert Tarjan",
            "year_introduced": 1988,
            "pseudocode": "NA",
            "time_complexity": "O(V^2 E)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Preflow-Push",
            "data_structures_used": ["Queue", "Adjacency List"]
        },
        {
            "name": "Hungarian Algorithm",
            "type": "Optimal Assignment",
            "author": "Harold W. Kuhn",
            "year_introduced": 1955,
            "pseudocode": "NA",
            "time_complexity": "O(V^3)",
            "space_complexity": "O(V^2)",
            "strategy_used": "Dynamic Programming, Augmenting Path",
            "data_structures_used": ["Matrix"]
        },
        {
            "name": "Gabow’s Edmonds Algorithm",
            "type": "Minimum Weight Matching",
            "author": "Harold N. Gabow",
            "year_introduced": 1990,
            "pseudocode": "NA",
            "time_complexity": "O(V^3)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Blossom Algorithm",
            "data_structures_used": ["Adjacency List"]
        },
        {
            "name": "Chordal Graph Recognition",
            "type": "Graph Property Testing",
            "author": "Multiple Contributions",
            "year_introduced": "NA",
            "pseudocode": "NA",
            "time_complexity": "O(V + E)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Lexicographic BFS",
            "data_structures_used": ["Adjacency List", "Queue"]
        },
        {
            "name": "Maximum Clique Algorithm",
            "type": "Graph Optimization",
            "author": "Multiple Contributions",
            "year_introduced": "NA",
            "pseudocode": "NA",
            "time_complexity": "O(2^V)",
            "space_complexity": "O(V + E)",
            "strategy_used": "Backtracking, Branch and Bound",
            "data_structures_used": ["Adjacency Matrix"]
        },
        {
            "name": "Coloring Greedy Algorithm",
            "type": "Graph Coloring",
            "author": "Multiple Contributions",
            "year_introduced": "NA",
            "pseudocode": "NA",
            "time_complexity": "O(V^2)",
            "space_complexity": "O(V)",
            "strategy_used": "Greedy Coloring",
            "data_structures_used": ["Adjacency Matrix", "Array"]
        }

            
    ]
}